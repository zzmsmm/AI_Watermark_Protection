{"remainingRequest":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\AI_Watermark_Protection\\attack-Web\\frontend\\src\\views\\verify\\index.vue?vue&type=style&index=0&id=28ca3254&scoped=true&lang=css&","dependencies":[{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\src\\views\\verify\\index.vue","mtime":1650693384533},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1650693378942},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1650693384030},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1650693382147},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650693378165},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1650693384029}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1lbnUgewogIG1hcmdpbi10b3A6IDEycHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcgp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/verify","sourcesContent":["<template>\r\n    <el-container style=\"padding: 20px 250px\">\r\n      <el-header height=\"110px\">\r\n\t\t<div style=\"text-align: center;margin-top: 10px\">\r\n\t\t  <el-progress :percentage=\"currentpercentage\" :status=\"currentstatus\"></el-progress>\r\n\t\t</div>\r\n\t\t<div style=\"text-align: center;margin-top: 20px\">\r\n\t\t  <div style=\"text-align: center;margin-top: 12px\">\r\n\t\t  <el-button :type=\"type\"\r\n\t\t\t\t\t@click=\"showDialog()\"\r\n\t\t             v-text=\"generate\"\r\n\t\t             size=\"medium\"\r\n\t\t\t\t\t:disabled=\"is_finish\">                   \r\n\t\t  </el-button>\r\n\t\t  </div>\r\n\t\t</div>\r\n      </el-header>\r\n\t\t<el-dialog title=\"上传\" :visible.sync=\"dialogOfUpload\" width=\"50%\" style=\"text-align: center;\">\r\n\t\t\t<el-upload class=\"upload-demo\" action=\"#\" drag multiple :headers=\"headers\" :auto-upload=\"false\"\r\n\t\t\t :file-list=\"fileList\" :on-change=\"handleChange\">\r\n\t\t\t\t<i class=\"el-icon-upload\"></i>\r\n\t\t\t\t<div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n\t\t\t\t<div class=\"el-upload__tip\" slot=\"tip\"></div>\r\n\t\t\t</el-upload>\r\n\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\r\n\t\t\t\t<el-button @click=\"dialogOfUpload = false\">取 消</el-button>\r\n\t\t\t\t<el-button type=\"primary\" @click=\"confirmUpload()\">上 传</el-button>\r\n\t\t\t</div>\t\r\n\t\t</el-dialog>\r\n\t\t<div style=\"text-align: center;margin-top: 0px\" v-if=\"state\">\r\n\t\t  <span><svg-icon icon-class=\"search\" style=\"color: #66b1ff; margin-right: 10px;\"/>识别结果: <b>{{number}}</b></span>\r\n\t\t</div>\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\nimport {upload, permission} from '@/api/user'\r\n  export default {\r\n    name: \"centralizationfl\",\r\n\tinject:['reload'],\r\n    components: {\r\n    },\r\n    data() {\r\n      return {\r\n\t\tdialogOfUpload: false,\r\n\t\tflag: false,\r\n\t\tfileList: [],\r\n        activestep: 0,\r\n        traintime: 100,\r\n\t\tgenerate: '点击上传',\r\n        currentpercentage: 0,\r\n        currentstatus: null,\r\n\t\tis_finish: false,\r\n\t\tstate: false,\r\n\t\tnumber:\"\",\r\n\t\ttype: \"primary\"\r\n      }\r\n    },\r\n    created() {\r\n      this.initCircuit()\r\n    },\r\n    watch: {\r\n    },\r\n    methods: {\r\n\t\t\tshowDialog() {\r\n\t\t\tthis.dialogOfUpload = true\r\n\t\t\t},\r\n      setprocess(step) {\r\n        console.log(\"set\")\r\n        this.activestep = step\r\n      },\r\n\t  handleChange(file, fileList) { //文件数量改变\r\n\t  \tthis.fileList = fileList;\r\n\t  },\r\n      confirmUpload() {\r\n        this.setprocess(2);\r\n\t\tthis.generate = \"图像识别中...\"\r\n\t\tvar param = new FormData();\r\n\t\tthis.fileList.forEach(\r\n\t\t\t(val, index) => {\r\n\t\t\t\tparam.append(\"file\", val.raw);\r\n\t\t\t}\r\n\t\t);\r\n\t\tupload(param).then(responce => {\r\n\t\t\tif(responce.msg === 'success') {\r\n\t\t\t\tthis.number = responce.number\r\n\t\t\t\tthis.dialogOfUpload = false;\r\n\t\t\t\tlet interval = setInterval(() => {\r\n\t\t\t\t  this.currentpercentage += 1\r\n\t\t\t\t  this.currentstatus = null\r\n\t\t\t\t  if (this.currentpercentage === 100) {\r\n\t\t\t\t\tclearInterval(interval)\r\n\t\t\t\t    this.currentstatus = 'success'\r\n\t\t\t\t    this.setprocess(3)\r\n\t\t\t\t\tthis.type = \"success\"\r\n\t\t\t\t\tthis.is_finish = true\r\n\t\t\t\t\tthis.generate = \"识别成功\"\r\n\t\t\t\t\tthis.state = true\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}, this.traintime * 50 / 100)\r\n\t\t\t}\t\r\n\t\t});\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .menu {\r\n    margin-top: 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center\r\n  }\r\n</style>\r\n"]}]}