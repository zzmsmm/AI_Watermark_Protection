{"remainingRequest":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\AI_Watermark_Protection\\attack-Web\\frontend\\src\\permission.js","dependencies":[{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\src\\permission.js","mtime":1650693384528},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\babel.config.js","mtime":1650693376521},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650693378165},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1650693377709},{"path":"E:\\AI_Watermark_Protection\\attack-Web\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1650693380081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkU6L0FJX1dhdGVybWFya19Qcm90ZWN0aW9uL2F0dGFjay1XZWIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCgppbXBvcnQgJ25wcm9ncmVzcy9ucHJvZ3Jlc3MuY3NzJzsgLy8gcHJvZ3Jlc3MgYmFyIHN0eWxlCgppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGdldCB0b2tlbiBmcm9tIGNvb2tpZQoKaW1wb3J0IGdldFBhZ2VUaXRsZSBmcm9tICdAL3V0aWxzL2dldC1wYWdlLXRpdGxlJzsKaW1wb3J0IHsgcGVybWlzc2lvbiB9IGZyb20gJ0AvYXBpL3VzZXIuanMnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCi8v5bCG5rOo5YaM6aG16Z2i5Yqg5YWl55m95ZCN5Y2V77yM5omN5Y+v5Lul5Zyo5pyq55m75b2V5oOF5Ya15LiL6K6/6ZeuCgp2YXIgd2hpdGVMaXN0ID0gWycvbG9naW4nLCAnL3JlZ2lzdGVyJywgJy9teWluZm9ybWF0aW9uJywgJy9wcm9vZi9pbmRleCcsICcvdmVyaWZ5L2luZGV4J107IC8vIG5vIHJlZGlyZWN0IHdoaXRlbGlzdAoKcm91dGVyLmJlZm9yZUVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciBoYXNUb2tlbiwgaGFzR2V0VXNlckluZm87CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIC8vIHN0YXJ0IHByb2dyZXNzIGJhcgogICAgICAgICAgICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8gc2V0IHBhZ2UgdGl0bGUKCiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gZ2V0UGFnZVRpdGxlKHRvLm1ldGEudGl0bGUpOyAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgbG9nZ2VkIGluCgogICAgICAgICAgICBoYXNUb2tlbiA9IGdldFRva2VuKCk7CgogICAgICAgICAgICBpZiAoIWhhc1Rva2VuKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoISh0by5wYXRoID09PSAnL2xvZ2luJykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gaWYgaXMgbG9nZ2VkIGluLCByZWRpcmVjdCB0byB0aGUgaG9tZSBwYWdlCiAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgIHBhdGg6ICcvJwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI3OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIC8vLyoKICAgICAgICAgICAgaGFzR2V0VXNlckluZm8gPSBzdG9yZS5nZXR0ZXJzLm5hbWU7CgogICAgICAgICAgICBpZiAoIWhhc0dldFVzZXJJbmZvKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9nZXRJbmZvJyk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgbmV4dCgpOyAvLyovCgogICAgICAgICAgICAvKg0KICAgICAgICAgICAgY29uc3QgeyByb2xlcyB9ID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvZ2V0SW5mbycpDQogICAgICAgICAgICAvL+agueaNrnJvbGVz5Yqo5oCB55Sf5oiQ6Lev55Sx6KGoDQogICAgICAgICAgICBjb25zdCBhY2Nlc3NSb3V0ZXMgPSBhd2FpdCBzdG9yZS5kaXNwYXRjaCgncGVybWlzc2lvbi9nZW5lcmF0ZVJvdXRlcycsIHJvbGVzKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcykNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgbmV4dCh7IC4uLnRvLCByZXBsYWNlOiB0cnVlIH0pDQogICAgICAgICAgICAqLwoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI3OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjA7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMTQpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjQ7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CgogICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihfY29udGV4dC50MCB8fCAnSGFzIEVycm9yJyk7CiAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CgogICAgICAgICAgY2FzZSAyNzoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDMwOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI5OgogICAgICAgICAgICAvKiBoYXMgbm8gdG9rZW4qLwogICAgICAgICAgICBpZiAod2hpdGVMaXN0LmluZGV4T2YodG8ucGF0aCkgIT09IC0xKSB7CiAgICAgICAgICAgICAgLy8gaW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgogICAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgIGNhc2UgMzA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxNCwgMjBdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICAvLyBmaW5pc2ggcHJvZ3Jlc3MgYmFyCiAgTlByb2dyZXNzLmRvbmUoKTsKfSk7"},{"version":3,"sources":["E:/AI_Watermark_Protection/attack-Web/frontend/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","permission","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasGetUserInfo","getters","name","dispatch","error","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,SAAQC,UAAR,QAAyB,eAAzB;AACAH,SAAS,CAACI,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;AAC5C;;AACA,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAU,WAAV,EAAuB,gBAAvB,EAAyC,cAAzC,EAAyD,eAAzD,CAAlB,C,CAA4F;;AAE5FT,MAAM,CAACU,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAV,YAAAA,SAAS,CAACW,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBX,YAAY,CAACM,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQCd,QAAQ,EART;;AAAA,iBAUZc,QAVY;AAAA;AAAA;AAAA;;AAAA,kBAWVP,EAAE,CAACQ,IAAH,KAAY,QAXF;AAAA;AAAA;AAAA;;AAYZ;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACAhB,YAAAA,SAAS,CAACiB,IAAV;AAdY;AAAA;;AAAA;AAgBjB;AACWC,YAAAA,cAjBM,GAiBWpB,KAAK,CAACqB,OAAN,CAAcC,IAjBzB;;AAAA,iBAkBRF,cAlBQ;AAAA;AAAA;AAAA;;AAmBVR,YAAAA,IAAI;AAnBM;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAgCFZ,KAAK,CAACuB,QAAN,CAAe,cAAf,CAhCE;;AAAA;AAkCRX,YAAAA,IAAI,GAlCI,CAmCd;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5CkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBA+CFZ,KAAK,CAACuB,QAAN,CAAe,iBAAf,CA/CE;;AAAA;AAgDRtB,YAAAA,OAAO,CAACuB,KAAR,CAAc,eAAS,WAAvB;AACAZ,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAhB,YAAAA,SAAS,CAACiB,IAAV;;AAlDQ;AAAA;AAAA;;AAAA;AAuDd;AAEA,gBAAIX,SAAS,CAACiB,OAAV,CAAkBf,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,cAAAA,IAAI;AACL,aAHD,MAGO;AACL;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAhB,cAAAA,SAAS,CAACiB,IAAV;AACD;;AAhEa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAoEApB,MAAM,CAAC2B,SAAP,CAAiB,YAAM;AACrB;AACAxB,EAAAA,SAAS,CAACiB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css' // progress bar style\r\nimport { getToken } from '@/utils/auth' // get token from cookie\r\nimport getPageTitle from '@/utils/get-page-title'\r\n\r\nimport {permission} from '@/api/user.js'\r\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\r\n//将注册页面加入白名单，才可以在未登录情况下访问\r\nconst whiteList = ['/login','/register', '/myinformation', '/proof/index', '/verify/index'] // no redirect whitelist\r\n\r\nrouter.beforeEach(async(to, from, next) => {\r\n  // start progress bar\r\n  NProgress.start()\r\n\r\n  // set page title\r\n  document.title = getPageTitle(to.meta.title)\r\n\r\n  // determine whether the user has logged in\r\n  const hasToken = getToken()\r\n\r\n  if (hasToken) {\r\n    if (to.path === '/login') {\r\n      // if is logged in, redirect to the home page\r\n      next({ path: '/' })\r\n      NProgress.done()\r\n    } else {\r\n\t///*\r\n      const hasGetUserInfo = store.getters.name\r\n      if (hasGetUserInfo) {\r\n        next()\r\n      } \r\n\t  //*/\r\n\t  /*\r\n\t  const hasRoles = store.getters.roles && store.getters.roles.length > 0\r\n\t  if (hasRoles) {\r\n\t    next()\r\n\t  }\r\n\t  */\r\n\t else {\r\n        try {\r\n          // get user info\r\n\t\t  ///*\r\n          await store.dispatch('user/getInfo')\r\n\r\n          next()\r\n\t\t  //*/\r\n\t\t  /*\r\n\t\t  const { roles } = await store.dispatch('user/getInfo')\r\n\t\t  //根据roles动态生成路由表\r\n\t\t  const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\r\n\t\t  \r\n\t\t  router.addRoutes(accessRoutes)\r\n\t\t  \r\n\t\t  next({ ...to, replace: true })\r\n\t\t  */\r\n        } catch (error) {\r\n          // remove token and go to login page to re-login\r\n          await store.dispatch('user/resetToken')\r\n          Message.error(error || 'Has Error')\r\n          next(`/login?redirect=${to.path}`)\r\n          NProgress.done()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    /* has no token*/\r\n\r\n    if (whiteList.indexOf(to.path) !== -1) {\r\n      // in the free login whitelist, go directly\r\n      next()\r\n    } else {\r\n      // other pages that do not have permission to access are redirected to the login page.\r\n      next(`/login?redirect=${to.path}`)\r\n      NProgress.done()\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  // finish progress bar\r\n  NProgress.done()\r\n})\r\n"]}]}