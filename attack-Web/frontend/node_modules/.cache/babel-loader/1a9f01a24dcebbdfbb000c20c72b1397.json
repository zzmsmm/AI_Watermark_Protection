{"remainingRequest":"E:\\大三下\\信安竞赛\\AI-Web\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\大三下\\信安竞赛\\AI-Web\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\大三下\\信安竞赛\\AI-Web\\frontend\\src\\permission.js","dependencies":[{"path":"E:\\大三下\\信安竞赛\\AI-Web\\frontend\\src\\permission.js","mtime":1647745479481},{"path":"E:\\大三下\\信安竞赛\\AI-Web\\frontend\\babel.config.js","mtime":1630065466000},{"path":"E:\\大三下\\信安竞赛\\AI-Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\大三下\\信安竞赛\\AI-Web\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\大三下\\信安竞赛\\AI-Web\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkU6L1x1NTkyN1x1NEUwOVx1NEUwQi9cdTRGRTFcdTVCODlcdTdBREVcdThENUIvQUktV2ViL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICducHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyc7IC8vIHByb2dyZXNzIGJhciBzdHlsZQoKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCmltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9nZXQtcGFnZS10aXRsZSc7CmltcG9ydCB7IHBlcm1pc3Npb24gfSBmcm9tICdAL2FwaS91c2VyLmpzJzsKTlByb2dyZXNzLmNvbmZpZ3VyZSh7CiAgc2hvd1NwaW5uZXI6IGZhbHNlCn0pOyAvLyBOUHJvZ3Jlc3MgQ29uZmlndXJhdGlvbgovL+WwhuazqOWGjOmhtemdouWKoOWFpeeZveWQjeWNle+8jOaJjeWPr+S7peWcqOacqueZu+W9leaDheWGteS4i+iuv+mXrgoKdmFyIHdoaXRlTGlzdCA9IFsnL2xvZ2luJywgJy9yZWdpc3RlcicsICcvbXlpbmZvcm1hdGlvbicsICcvcHJvb2YvaW5kZXgnLCAnL3ZlcmlmeS9pbmRleCddOyAvLyBubyByZWRpcmVjdCB3aGl0ZWxpc3QKCnJvdXRlci5iZWZvcmVFYWNoKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRvLCBmcm9tLCBuZXh0KSB7CiAgICB2YXIgaGFzVG9rZW4sIGhhc0dldFVzZXJJbmZvOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAvLyBzdGFydCBwcm9ncmVzcyBiYXIKICAgICAgICAgICAgTlByb2dyZXNzLnN0YXJ0KCk7IC8vIHNldCBwYWdlIHRpdGxlCgogICAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IGdldFBhZ2VUaXRsZSh0by5tZXRhLnRpdGxlKTsgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIGxvZ2dlZCBpbgoKICAgICAgICAgICAgaGFzVG9rZW4gPSBnZXRUb2tlbigpOwoKICAgICAgICAgICAgaWYgKCFoYXNUb2tlbikgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCEodG8ucGF0aCA9PT0gJy9sb2dpbicpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQogICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICBwYXRoOiAnLycKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAvLy8qCiAgICAgICAgICAgIGhhc0dldFVzZXJJbmZvID0gc3RvcmUuZ2V0dGVycy5uYW1lOwoKICAgICAgICAgICAgaWYgKCFoYXNHZXRVc2VySW5mbykgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ3VzZXIvZ2V0SW5mbycpOwoKICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIG5leHQoKTsgLy8qLwoKICAgICAgICAgICAgLyoKICAgICAgICAgICAgY29uc3QgeyByb2xlcyB9ID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvZ2V0SW5mbycpCiAgICAgICAgICAgIC8v5qC55o2ucm9sZXPliqjmgIHnlJ/miJDot6/nlLHooagKICAgICAgICAgICAgY29uc3QgYWNjZXNzUm91dGVzID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ3Blcm1pc3Npb24vZ2VuZXJhdGVSb3V0ZXMnLCByb2xlcykKICAgICAgICAgICAgCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKQogICAgICAgICAgICAKICAgICAgICAgICAgbmV4dCh7IC4uLnRvLCByZXBsYWNlOiB0cnVlIH0pCiAgICAgICAgICAgICovCgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyMDsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxNCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNDsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCd1c2VyL3Jlc2V0VG9rZW4nKTsKCiAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICBNZXNzYWdlLmVycm9yKF9jb250ZXh0LnQwIHx8ICdIYXMgRXJyb3InKTsKICAgICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKCiAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzA7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMjk6CiAgICAgICAgICAgIC8qIGhhcyBubyB0b2tlbiovCiAgICAgICAgICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgICAgICAgICAvLyBpbiB0aGUgZnJlZSBsb2dpbiB3aGl0ZWxpc3QsIGdvIGRpcmVjdGx5CiAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIG90aGVyIHBhZ2VzIHRoYXQgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgYXJlIHJlZGlyZWN0ZWQgdG8gdGhlIGxvZ2luIHBhZ2UuCiAgICAgICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSAzMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzE0LCAyMF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7CnJvdXRlci5hZnRlckVhY2goZnVuY3Rpb24gKCkgewogIC8vIGZpbmlzaCBwcm9ncmVzcyBiYXIKICBOUHJvZ3Jlc3MuZG9uZSgpOwp9KTs="},{"version":3,"sources":["E:/大三下/信安竞赛/AI-Web/frontend/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","permission","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasGetUserInfo","getters","name","dispatch","error","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,SAAQC,UAAR,QAAyB,eAAzB;AACAH,SAAS,CAACI,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;AAC5C;;AACA,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAU,WAAV,EAAuB,gBAAvB,EAAyC,cAAzC,EAAyD,eAAzD,CAAlB,C,CAA4F;;AAE5FT,MAAM,CAACU,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAV,YAAAA,SAAS,CAACW,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBX,YAAY,CAACM,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQCd,QAAQ,EART;;AAAA,iBAUZc,QAVY;AAAA;AAAA;AAAA;;AAAA,kBAWVP,EAAE,CAACQ,IAAH,KAAY,QAXF;AAAA;AAAA;AAAA;;AAYZ;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACAhB,YAAAA,SAAS,CAACiB,IAAV;AAdY;AAAA;;AAAA;AAgBjB;AACWC,YAAAA,cAjBM,GAiBWpB,KAAK,CAACqB,OAAN,CAAcC,IAjBzB;;AAAA,iBAkBRF,cAlBQ;AAAA;AAAA;AAAA;;AAmBVR,YAAAA,IAAI;AAnBM;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAgCFZ,KAAK,CAACuB,QAAN,CAAe,cAAf,CAhCE;;AAAA;AAkCRX,YAAAA,IAAI,GAlCI,CAmCd;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5CkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBA+CFZ,KAAK,CAACuB,QAAN,CAAe,iBAAf,CA/CE;;AAAA;AAgDRtB,YAAAA,OAAO,CAACuB,KAAR,CAAc,eAAS,WAAvB;AACAZ,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAhB,YAAAA,SAAS,CAACiB,IAAV;;AAlDQ;AAAA;AAAA;;AAAA;AAuDd;AAEA,gBAAIX,SAAS,CAACiB,OAAV,CAAkBf,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,cAAAA,IAAI;AACL,aAHD,MAGO;AACL;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAhB,cAAAA,SAAS,CAACiB,IAAV;AACD;;AAhEa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAoEApB,MAAM,CAAC2B,SAAP,CAAiB,YAAM;AACrB;AACAxB,EAAAA,SAAS,CAACiB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\r\nimport {permission} from '@/api/user.js'\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n//将注册页面加入白名单，才可以在未登录情况下访问\nconst whiteList = ['/login','/register', '/myinformation', '/proof/index', '/verify/index'] // no redirect whitelist\n\nrouter.beforeEach(async(to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n\t///*\n      const hasGetUserInfo = store.getters.name\n      if (hasGetUserInfo) {\n        next()\n      } \n\t  //*/\n\t  /*\n\t  const hasRoles = store.getters.roles && store.getters.roles.length > 0\n\t  if (hasRoles) {\n\t    next()\n\t  }\n\t  */\n\t else {\n        try {\n          // get user info\n\t\t  ///*\n          await store.dispatch('user/getInfo')\n\n          next()\n\t\t  //*/\n\t\t  /*\n\t\t  const { roles } = await store.dispatch('user/getInfo')\n\t\t  //根据roles动态生成路由表\n\t\t  const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n\t\t  \n\t\t  router.addRoutes(accessRoutes)\n\t\t  \n\t\t  next({ ...to, replace: true })\n\t\t  */\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('user/resetToken')\n          Message.error(error || 'Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}